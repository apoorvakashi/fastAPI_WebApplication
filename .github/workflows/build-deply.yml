name: Build and Deploy Code
on: [push]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      ALGORITHM: ${{secrets.ALGORITHM}}
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v2
      - name: Install Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install all dependencies
        run: pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pip install pytest
          pytest
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      # - name: Extract metadata
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: apoorvakashi0511/fastapi
      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     tags: ${{ steps.meta.outputs.tags }}
      #     annotations: ${{ steps.meta.outputs.annotations }}
      #     cache-from: type=registry,ref=${{ steps.meta.outputs.tags }}
      #     cache-to: type=inline
      #     push: true

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: deploying stuff
      - run: echo "Deploying..."
